// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageServantStateReply.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "MessageServantStateReply.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* MessageServantStateReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MessageServantStateReply_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_MessageServantStateReply_2eproto() {
  protobuf_AddDesc_MessageServantStateReply_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "MessageServantStateReply.proto");
  GOOGLE_CHECK(file != NULL);
  MessageServantStateReply_descriptor_ = file->message_type(0);
  static const int MessageServantStateReply_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, cpu_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, memory_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, type_),
  };
  MessageServantStateReply_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      MessageServantStateReply_descriptor_,
      MessageServantStateReply::default_instance_,
      MessageServantStateReply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageServantStateReply, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(MessageServantStateReply));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_MessageServantStateReply_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    MessageServantStateReply_descriptor_, &MessageServantStateReply::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_MessageServantStateReply_2eproto() {
  delete MessageServantStateReply::default_instance_;
  delete MessageServantStateReply_reflection_;
}

void protobuf_AddDesc_MessageServantStateReply_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036MessageServantStateReply.proto\"`\n\030Mess"
    "ageServantStateReply\022\n\n\002id\030\001 \003(\t\022\r\n\005stat"
    "e\030\002 \003(\005\022\013\n\003cpu\030\003 \003(\005\022\016\n\006memory\030\004 \003(\005\022\014\n\004"
    "type\030\005 \003(\005", 130);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "MessageServantStateReply.proto", &protobuf_RegisterTypes);
  MessageServantStateReply::default_instance_ = new MessageServantStateReply();
  MessageServantStateReply::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_MessageServantStateReply_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_MessageServantStateReply_2eproto {
  StaticDescriptorInitializer_MessageServantStateReply_2eproto() {
    protobuf_AddDesc_MessageServantStateReply_2eproto();
  }
} static_descriptor_initializer_MessageServantStateReply_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int MessageServantStateReply::kIdFieldNumber;
const int MessageServantStateReply::kStateFieldNumber;
const int MessageServantStateReply::kCpuFieldNumber;
const int MessageServantStateReply::kMemoryFieldNumber;
const int MessageServantStateReply::kTypeFieldNumber;
#endif  // !_MSC_VER

MessageServantStateReply::MessageServantStateReply()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:MessageServantStateReply)
}

void MessageServantStateReply::InitAsDefaultInstance() {
}

MessageServantStateReply::MessageServantStateReply(const MessageServantStateReply& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:MessageServantStateReply)
}

void MessageServantStateReply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

MessageServantStateReply::~MessageServantStateReply() {
  // @@protoc_insertion_point(destructor:MessageServantStateReply)
  SharedDtor();
}

void MessageServantStateReply::SharedDtor() {
  if (this != default_instance_) {
  }
}

void MessageServantStateReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageServantStateReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MessageServantStateReply_descriptor_;
}

const MessageServantStateReply& MessageServantStateReply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_MessageServantStateReply_2eproto();
  return *default_instance_;
}

MessageServantStateReply* MessageServantStateReply::default_instance_ = NULL;

MessageServantStateReply* MessageServantStateReply::New() const {
  return new MessageServantStateReply;
}

void MessageServantStateReply::Clear() {
  id_.Clear();
  state_.Clear();
  cpu_.Clear();
  memory_.Clear();
  type_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool MessageServantStateReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MessageServantStateReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string id = 1;
      case 1: {
        if (tag == 10) {
         parse_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->id(this->id_size() - 1).data(),
            this->id(this->id_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_id;
        if (input->ExpectTag(16)) goto parse_state;
        break;
      }

      // repeated int32 state = 2;
      case 2: {
        if (tag == 16) {
         parse_state:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_state())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_state())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_state;
        if (input->ExpectTag(24)) goto parse_cpu;
        break;
      }

      // repeated int32 cpu = 3;
      case 3: {
        if (tag == 24) {
         parse_cpu:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 24, input, this->mutable_cpu())));
        } else if (tag == 26) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_cpu())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_cpu;
        if (input->ExpectTag(32)) goto parse_memory;
        break;
      }

      // repeated int32 memory = 4;
      case 4: {
        if (tag == 32) {
         parse_memory:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_memory())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_memory())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_memory;
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // repeated int32 type = 5;
      case 5: {
        if (tag == 40) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 40, input, this->mutable_type())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_type())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_type;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MessageServantStateReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MessageServantStateReply)
  return false;
#undef DO_
}

void MessageServantStateReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MessageServantStateReply)
  // repeated string id = 1;
  for (int i = 0; i < this->id_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->id(i).data(), this->id(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "id");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->id(i), output);
  }

  // repeated int32 state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->state(i), output);
  }

  // repeated int32 cpu = 3;
  for (int i = 0; i < this->cpu_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      3, this->cpu(i), output);
  }

  // repeated int32 memory = 4;
  for (int i = 0; i < this->memory_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->memory(i), output);
  }

  // repeated int32 type = 5;
  for (int i = 0; i < this->type_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      5, this->type(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:MessageServantStateReply)
}

::google::protobuf::uint8* MessageServantStateReply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:MessageServantStateReply)
  // repeated string id = 1;
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->id(i).data(), this->id(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "id");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->id(i), target);
  }

  // repeated int32 state = 2;
  for (int i = 0; i < this->state_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->state(i), target);
  }

  // repeated int32 cpu = 3;
  for (int i = 0; i < this->cpu_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(3, this->cpu(i), target);
  }

  // repeated int32 memory = 4;
  for (int i = 0; i < this->memory_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->memory(i), target);
  }

  // repeated int32 type = 5;
  for (int i = 0; i < this->type_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(5, this->type(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MessageServantStateReply)
  return target;
}

int MessageServantStateReply::ByteSize() const {
  int total_size = 0;

  // repeated string id = 1;
  total_size += 1 * this->id_size();
  for (int i = 0; i < this->id_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->id(i));
  }

  // repeated int32 state = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->state_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->state(i));
    }
    total_size += 1 * this->state_size() + data_size;
  }

  // repeated int32 cpu = 3;
  {
    int data_size = 0;
    for (int i = 0; i < this->cpu_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->cpu(i));
    }
    total_size += 1 * this->cpu_size() + data_size;
  }

  // repeated int32 memory = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->memory_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->memory(i));
    }
    total_size += 1 * this->memory_size() + data_size;
  }

  // repeated int32 type = 5;
  {
    int data_size = 0;
    for (int i = 0; i < this->type_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->type(i));
    }
    total_size += 1 * this->type_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageServantStateReply::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const MessageServantStateReply* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const MessageServantStateReply*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void MessageServantStateReply::MergeFrom(const MessageServantStateReply& from) {
  GOOGLE_CHECK_NE(&from, this);
  id_.MergeFrom(from.id_);
  state_.MergeFrom(from.state_);
  cpu_.MergeFrom(from.cpu_);
  memory_.MergeFrom(from.memory_);
  type_.MergeFrom(from.type_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void MessageServantStateReply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageServantStateReply::CopyFrom(const MessageServantStateReply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageServantStateReply::IsInitialized() const {

  return true;
}

void MessageServantStateReply::Swap(MessageServantStateReply* other) {
  if (other != this) {
    id_.Swap(&other->id_);
    state_.Swap(&other->state_);
    cpu_.Swap(&other->cpu_);
    memory_.Swap(&other->memory_);
    type_.Swap(&other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata MessageServantStateReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MessageServantStateReply_descriptor_;
  metadata.reflection = MessageServantStateReply_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
